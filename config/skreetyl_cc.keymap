/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5      &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T       &kp Y      &kp U      &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G       &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B       &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHIFT
           &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                         &kp UP     &kp DOWN   &kp LBKT  &kp RBKT
                                          &kp LCTRL  &kp LALT    &kp RGUI   &kp RCTRL
                                &kp BSPC  &kp DEL    &kp HOME    &kp PG_DN  &kp RET    &kp SPACE
                                                     &kp N1      &kp N1
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans
                                &trans  &trans    &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
                                        &trans    &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans
                                &trans  &trans    &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
                                        &trans    &trans
            >;
        };
    };
};
